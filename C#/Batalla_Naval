int [,] tablero1, tablero2;
tablero1 = new int[11, 11];
tablero2 = new int[11, 11];
string jugador1, jugador2;
int opcion, salir;
int  columnas, filas, posicion, numero_acorazados, numero_crucero, numero_destructor, numero_submarino, tiro_en_columna, tiro_en_fila, aciertos_jugador1, aciertos_jugador2, turno;
const int acorazado = 1, crucero = 2, destructor = 3, submarino = 4;
salir = 1;
Random aleatorio;
do
{
    for (int i = 19; i < 32; i++)
    {
        Console.SetCursorPosition(i, 0);
        Console.Write("===");

    }
    for (int i = 1; i < 2; i++)
    {
        Console.SetCursorPosition(34, i);
        Console.Write("|");
    }
    for (int i = 1; i < 2; i++)
    {
        Console.SetCursorPosition(18, i);
        Console.Write("|");
    }
    for (int i = 19; i < 32; i++)
    {
        Console.SetCursorPosition(i, 1);
        Console.Write("---");

    }
    for (int i = 19; i < 32; i++)
    {
        Console.SetCursorPosition(i, 2);
        Console.Write("===");

    }
    Console.SetCursorPosition(20, 1);
    Console.ForegroundColor = ConsoleColor.Red;
    Console.Write("BATALLA NAVAL");
    Console.ForegroundColor = ConsoleColor.White;
    Console.SetCursorPosition(1, 4);
    Console.WriteLine("Modos de juego:\n");
    Console.SetCursorPosition(1, 6);
    Console.WriteLine("1. 2 jugadores");
    Console.SetCursorPosition(1, 7);
    Console.WriteLine("2. Jugador vs IA");
    Console.SetCursorPosition(1, 8);
    Console.WriteLine("3. Salir");
    Console.SetCursorPosition(1, 10);
    Console.WriteLine("Ingrese la opcion del modo al que desea jugar");
    Console.SetCursorPosition(1, 11);
    opcion = Convert.ToInt32(Console.ReadLine());
    switch (opcion)
    {
        case 1:
            {
                Console.Clear();
                Console.SetCursorPosition(1, 1);
                Console.WriteLine("Ingrese el nombre de jugador 1");
                Console.SetCursorPosition(1, 2);
                jugador1 = Convert.ToString(Console.ReadLine());
                Console.SetCursorPosition(33, 1);
                Console.WriteLine("|");
                Console.SetCursorPosition(33, 2);
                Console.WriteLine("|");
                Console.SetCursorPosition(35, 1);
                Console.WriteLine("Ingrese el nombre de jugador 2");
                Console.SetCursorPosition(35, 2);
                jugador2 = Convert.ToString(Console.ReadLine());
                Console.SetCursorPosition(19, 4);
                Console.ForegroundColor = ConsoleColor.Green;
                Console.WriteLine("Presione ENTER para continuar");
                Console.ForegroundColor = ConsoleColor.White;
                Console.ReadLine();

                //Crear tabla
                for (int i = 0; i < 11; i++)
                {
                    for (int j = 0; j < 11; j++)
                    {
                        tablero1[i, j] = -1;

                    }
                }
                for (int i = 0; i < 11; i++)
                {
                    tablero1[i, 0] = i;
                    tablero1[0, i] = i;
                }

                //Crear barcos
                aleatorio = new Random();
                numero_acorazados = 0;

                //GENERACION DE BARCOS ACORAZADOS (BARCOS DE 4 POSICIONES}

                while (numero_acorazados < acorazado)
                {
                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 7)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas + 1, filas] == -1 &&
                                tablero1[columnas + 2, filas] == -1 &&
                                tablero1[columnas + 3, filas] == -1)
                            {
                                tablero1[columnas, filas] = 0;
                                tablero1[columnas + 1, filas] = 0;
                                tablero1[columnas + 2, filas] = 0;
                                tablero1[columnas + 3, filas] = 0;

                                numero_acorazados++;
                            }
                        }
                    }

                    //Barcos Verticales

                    if (posicion == 1)
                    {
                        if (filas < 7)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas, filas + 1] == -1 &&
                                tablero1[columnas, filas + 2] == -1 &&
                                tablero1[columnas, filas + 3] == -1)
                            {
                                tablero1[columnas, filas] = 0;
                                tablero1[columnas, filas + 1] = 0;
                                tablero1[columnas, filas + 2] = 0;
                                tablero1[columnas, filas + 3] = 0;

                                numero_acorazados++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS CRUCERO (BARCOS DE 3 POSICIONES)

                numero_crucero = 0;

                while (numero_crucero < crucero)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 8)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas + 1, filas] == -1 &&
                                tablero1[columnas + 2, filas] == -1)
                            {
                                tablero1[columnas, filas] = 2;
                                tablero1[columnas + 1, filas] = 2;
                                tablero1[columnas + 2, filas] = 2;

                                numero_crucero++;
                            }
                        }
                    }

                    //Barcos verticales

                    if (posicion == 1)
                    {
                        if (filas < 8)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas, filas + 1] == -1 &&
                                tablero1[columnas, filas + 2] == -1)

                            {
                                tablero1[columnas, filas] = 2;
                                tablero1[columnas, filas + 1] = 2;
                                tablero1[columnas, filas + 2] = 2;

                                numero_crucero++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS DESTRUCTOR (BARCOS DE 2 POSICIONES)

                numero_destructor = 0;

                while (numero_destructor < destructor)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 9)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas + 1, filas] == -1)
                            {
                                tablero1[columnas, filas] = 3;
                                tablero1[columnas + 1, filas] = 3;

                                numero_destructor++;
                            }
                        }
                    }

                    //Barcos verticales

                    if (posicion == 1)
                    {
                        if (filas < 9)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas, filas + 1] == -1)

                            {
                                tablero1[columnas, filas] = 3;
                                tablero1[columnas, filas + 1] = 3;

                                numero_destructor++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS SUBMARINOS (BARCOS DE 1 POSICION)

                numero_submarino = 0;

                while (numero_submarino < submarino)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);

                    //Barcos    

                    if (columnas < 10 && filas < 10)
                    {
                        if (tablero1[columnas, filas] == -1)
                        {
                            tablero1[columnas, filas] = 4;

                            numero_submarino++;
                        }
                    }
                }


                //IMPRIMIR TABLA
                //Imprimir decoracion tabla

                Console.Clear();
                Console.ForegroundColor = ConsoleColor.Green;
                for (int i = 2; i < 23; i++)
                {
                    Console.SetCursorPosition(5, i);
                    Console.WriteLine("|");
                }

                for (int c = 8; c < 37; c += 3)
                {
                    for (int i = 3; i < 23; i++)
                    {
                        Console.SetCursorPosition(c, i);
                        Console.WriteLine("|");
                    }
                }

                for (int i = 3; i < 36; i++)
                {
                    Console.SetCursorPosition(i, 3);
                    Console.WriteLine("-");
                }

                for (int f = 5; f < 24; f += 2)
                {
                    for (int i = 6; i < 35; i++)
                    {
                        Console.SetCursorPosition(i, f);
                        Console.WriteLine("-");
                    }
                }

                Console.SetCursorPosition(1, 0);
                Console.WriteLine(jugador1);


                //Imprimir tabla

                Console.ForegroundColor = ConsoleColor.White;

                for (int i = 0; i < 11; i++)
                {
                    for (int j = 0; j < 11; j++)
                    {
                        if (i == 0 || j == 0)
                        {
                            Console.SetCursorPosition(((i + 1) * 3), (j + 1) * 2);
                            Console.Write(tablero1[i, j]);
                        }
                    }

                }

                //-----------------------------------------------------------------------------------------------------------------------------
                //TABLERO 2
                //Imprimir decoracion tabla

                Console.ForegroundColor = ConsoleColor.Cyan;
                for (int i = 2; i < 23; i++)
                {
                    Console.SetCursorPosition(45, i);
                    Console.WriteLine("|");
                }

                for (int c = 48; c < 78; c += 3)
                {
                    for (int i = 3; i < 23; i++)
                    {
                        Console.SetCursorPosition(c, i);
                        Console.WriteLine("|");
                    }
                }

                for (int i = 43; i < 76; i++)
                {
                    Console.SetCursorPosition(i, 3);
                    Console.WriteLine("-");
                }

                for (int f = 5; f < 24; f += 2)
                {
                    for (int i = 46; i < 75; i++)
                    {
                        Console.SetCursorPosition(i, f);
                        Console.WriteLine("-");
                    }
                }

                Console.SetCursorPosition(42, 0);
                Console.WriteLine(jugador2);


                //RELLENAR TABLA 2

                Console.ForegroundColor = ConsoleColor.White;
                for (int i = 0; i < 11; i++)
                {
                    for (int j = 0; j < 11; j++)
                    {
                        tablero2[i, j] = -1;

                    }
                }
                for (int i = 0; i < 11; i++)
                {
                    tablero2[i, 0] = i;
                    tablero2[0, i] = i;
                }

                //Crear barcos
                aleatorio = new Random();
                numero_acorazados = 0;

                //GENERACION DE BARCOS ACORAZADOS (BARCOS DE 4 POSICIONES}

                while (numero_acorazados < acorazado)
                {
                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 7)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas + 1, filas] == -1 &&
                                tablero2[columnas + 2, filas] == -1 &&
                                tablero2[columnas + 3, filas] == -1)
                            {
                                tablero2[columnas, filas] = 0;
                                tablero2[columnas + 1, filas] = 0;
                                tablero2[columnas + 2, filas] = 0;
                                tablero2[columnas + 3, filas] = 0;

                                numero_acorazados++;
                            }
                        }
                    }

                    //Barcos Verticales

                    if (posicion == 1)
                    {
                        if (filas < 7)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas, filas + 1] == -1 &&
                                tablero2[columnas, filas + 2] == -1 &&
                                tablero2[columnas, filas + 3] == -1)
                            {
                                tablero2[columnas, filas] = 0;
                                tablero2[columnas, filas + 1] = 0;
                                tablero2[columnas, filas + 2] = 0;
                                tablero2[columnas, filas + 3] = 0;

                                numero_acorazados++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS CRUCERO (BARCOS DE 3 POSICIONES)

                numero_crucero = 0;

                while (numero_crucero < crucero)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 8)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas + 1, filas] == -1 &&
                                tablero2[columnas + 2, filas] == -1)
                            {
                                tablero2[columnas, filas] = 2;
                                tablero2[columnas + 1, filas] = 2;
                                tablero2[columnas + 2, filas] = 2;

                                numero_crucero++;
                            }
                        }
                    }

                    //Barcos verticales

                    if (posicion == 1)
                    {
                        if (filas < 8)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas, filas + 1] == -1 &&
                                tablero2[columnas, filas + 2] == -1)

                            {
                                tablero2[columnas, filas] = 2;
                                tablero2[columnas, filas + 1] = 2;
                                tablero2[columnas, filas + 2] = 2;

                                numero_crucero++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS DESTRUCTOR (BARCOS DE 2 POSICIONES)

                numero_destructor = 0;

                while (numero_destructor < destructor)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 9)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas + 1, filas] == -1)
                            {
                                tablero2[columnas, filas] = 3;
                                tablero2[columnas + 1, filas] = 3;

                                numero_destructor++;
                            }
                        }
                    }

                    //Barcos verticales

                    if (posicion == 1)
                    {
                        if (filas < 9)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas, filas + 1] == -1)

                            {
                                tablero2[columnas, filas] = 3;
                                tablero2[columnas, filas + 1] = 3;

                                numero_destructor++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS SUBMARINOS (BARCOS DE 1 POSICION)

                numero_submarino = 0;

                while (numero_submarino < submarino)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);

                    //Barcos    

                    if (columnas < 10 && filas < 10)
                    {
                        if (tablero2[columnas, filas] == -1)
                        {
                            tablero2[columnas, filas] = 4;

                            numero_submarino++;
                        }
                    }
                }

                //IMPRIMIR TABLERO 2

                Console.ForegroundColor = ConsoleColor.White;

                for (int i = 0; i < 11; i++)
                {
                    for (int j = 0; j < 11; j++)
                    {
                        if (i == 0 || j == 0)
                        {
                            Console.SetCursorPosition(((i + 1) * 3) + 40, (j + 1) * 2);
                            Console.Write(tablero2[i, j]);
                        }

                    }

                }

                //JUGABILIDAD

                aciertos_jugador1 = 0;
                aciertos_jugador2 = 0;
                Console.SetCursorPosition(1, 27);
                Console.WriteLine("Ingrese tiro en X:");
                Console.SetCursorPosition(1, 28);
                Console.WriteLine("Ingrese tiro en y:");
                turno = 0;
                while (aciertos_jugador1 < 20 && aciertos_jugador2 < 20)
                {
                    if (turno == 0)
                    {
                        Console.SetCursorPosition(0, 25);
                        Console.Write("                                                          ");
                        Console.SetCursorPosition(0, 25);
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.Write(" Tirando " + jugador1);
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.SetCursorPosition(19, 27);
                        Console.Write("                                        ");
                        Console.SetCursorPosition(19, 28);
                        Console.Write("                                        ");
                        Console.SetCursorPosition(19, 27);
                        tiro_en_columna = Convert.ToInt32(Console.ReadLine());
                        Console.SetCursorPosition(19, 28);
                        tiro_en_fila = Convert.ToInt32(Console.ReadLine());

                        while (tiro_en_columna < 1 || tiro_en_columna > 10 || tiro_en_fila < 1 || tiro_en_fila > 10)
                        {
                            Console.SetCursorPosition(0, 29);
                            Console.ForegroundColor = ConsoleColor.Red;
                            Console.Write(" No sea idiota, el tablero es de 10 x 10. Vuelve a tirar ");
                            Console.ForegroundColor = ConsoleColor.White;
                            Console.ReadKey();
                            Console.SetCursorPosition(19, 27);
                            Console.Write("                                        ");
                            Console.SetCursorPosition(19, 28);
                            Console.Write("                                        ");
                            Console.SetCursorPosition(0, 29);
                            Console.Write("                                                                                ");
                            Console.SetCursorPosition(19, 27);
                            tiro_en_columna = Convert.ToInt32(Console.ReadLine());
                            Console.SetCursorPosition(19, 28);
                            tiro_en_fila = Convert.ToInt32(Console.ReadLine());
                        }

                        if (tablero2[tiro_en_columna, tiro_en_fila] != -1 && tablero2[tiro_en_columna, tiro_en_fila] != 0 && tablero2[tiro_en_columna, tiro_en_fila] != 2 && tablero2[tiro_en_columna, tiro_en_fila] != 3 && tablero2[tiro_en_columna, tiro_en_fila] != 4)
                        {
                            Console.SetCursorPosition(0, 29);
                            Console.ForegroundColor = ConsoleColor.Red;
                            Console.Write(" Ya tiraste ahi idiota. Vuelve a tirar");
                            Console.ForegroundColor = ConsoleColor.White;
                            Console.ReadKey();
                            Console.SetCursorPosition(0, 29);
                            Console.Write("                                                   ");
                        }
                        else
                        {
                            if (tablero2[tiro_en_columna, tiro_en_fila] == 0 || tablero2[tiro_en_columna, tiro_en_fila] == 2 || tablero2[tiro_en_columna, tiro_en_fila] == 3 || tablero2[tiro_en_columna, tiro_en_fila] == 4)
                            {
                                Console.SetCursorPosition(((tiro_en_columna + 1) * 3) + 40, (tiro_en_fila + 1) * 2);
                                Console.ForegroundColor = ConsoleColor.Red;
                                Console.Write(" B");
                                Console.SetCursorPosition(1, 29);
                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.Write("Le diste Vuele a tirar");
                                Console.ForegroundColor = ConsoleColor.White;
                                Console.ReadKey();
                                Console.SetCursorPosition(1, 29);                                
                                Console.Write("                                                             ");
                                aciertos_jugador1++;
                                tablero2[tiro_en_columna, tiro_en_fila] = 69;
                            }
                            else
                            {
                                Console.ForegroundColor = ConsoleColor.Blue;
                                Console.SetCursorPosition(((tiro_en_columna + 1) * 3) + 40, (tiro_en_fila + 1) * 2);
                                Console.Write(" A");
                                Console.SetCursorPosition(1, 29);
                                Console.ForegroundColor = ConsoleColor.Red;
                                Console.Write("Fallaste!");
                                Console.ForegroundColor = ConsoleColor.White;
                                Console.ReadKey();
                                Console.SetCursorPosition(1, 29);                                
                                Console.Write("                                                            ");
                                tablero2[tiro_en_columna, tiro_en_fila] = 69;
                                turno = 1;
                            }
                        }
                    }
                    else
                    {
                        Console.SetCursorPosition(0, 25);
                        Console.Write("                                                                             ");
                        Console.ForegroundColor = ConsoleColor.Cyan;
                        Console.SetCursorPosition(0, 25);
                        Console.Write(" Tirando " + jugador2);
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.SetCursorPosition(19, 27);
                        Console.Write("                                        ");
                        Console.SetCursorPosition(19, 28);
                        Console.Write("                                        ");
                        Console.SetCursorPosition(0, 29);
                        Console.Write("                                                     ");
                        Console.SetCursorPosition(19, 27);
                        tiro_en_columna = Convert.ToInt32(Console.ReadLine());
                        Console.SetCursorPosition(19, 28);
                        tiro_en_fila = Convert.ToInt32(Console.ReadLine());

                        while (tiro_en_fila < 1 || tiro_en_fila > 10 || tiro_en_columna < 1 || tiro_en_columna > 10)
                        {
                            Console.SetCursorPosition(0, 29);
                            Console.ForegroundColor = ConsoleColor.Red;
                            Console.Write(" No sea idiota, el tablero es de 10 x 10. Vuelve a tirar ");
                            Console.ForegroundColor = ConsoleColor.White;
                            Console.ReadKey();
                            Console.SetCursorPosition(19, 27);
                            Console.Write("                                        ");
                            Console.SetCursorPosition(19, 28);
                            Console.Write("                                        ");
                            Console.SetCursorPosition(0, 29);
                            Console.Write("                                                                                ");
                            Console.SetCursorPosition(19, 27);
                            tiro_en_columna = Convert.ToInt32(Console.ReadLine());
                            Console.SetCursorPosition(19, 28);
                            tiro_en_fila = Convert.ToInt32(Console.ReadLine());

                        }

                        if (tablero1[tiro_en_columna, tiro_en_fila] != -1 && tablero1[tiro_en_columna, tiro_en_fila] != 0 && tablero1[tiro_en_columna, tiro_en_fila] != 2 && tablero1[tiro_en_columna, tiro_en_fila] != 3 && tablero1[tiro_en_columna, tiro_en_fila] != 4)
                        {
                            Console.SetCursorPosition(0, 29);
                            Console.ForegroundColor = ConsoleColor.Red;
                            Console.Write(" Ya tiraste ahi idiota. Vuelve a tirar");
                            Console.ForegroundColor = ConsoleColor.White;
                            Console.ReadKey();
                            Console.SetCursorPosition(0, 29);
                            Console.Write("                                                             ");
                        }
                        else
                        {
                            if (tablero1[tiro_en_columna, tiro_en_fila] != 0 && tablero1[tiro_en_columna, tiro_en_fila] != 2 && tablero1[tiro_en_columna, tiro_en_fila] != 3 && tablero1[tiro_en_columna, tiro_en_fila] != 4)
                            {
                                Console.SetCursorPosition((tiro_en_columna + 1) * 3, (tiro_en_fila + 1) * 2);
                                Console.ForegroundColor = ConsoleColor.Red;
                                Console.Write(" B");
                                Console.SetCursorPosition(1, 29);
                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.Write("Le diste Vuele a tirar");
                                Console.ForegroundColor = ConsoleColor.White;
                                Console.ReadKey();
                                Console.SetCursorPosition(1, 29);                                
                                Console.Write("                                                     ");
                                aciertos_jugador2++;
                                tablero1[tiro_en_columna, tiro_en_fila] = 69;
                            }
                            else
                            {
                                Console.SetCursorPosition(((tiro_en_columna + 1) * 3), (tiro_en_fila + 1) * 2);
                                Console.ForegroundColor = ConsoleColor.Blue;
                                Console.Write(" A");
                                Console.SetCursorPosition(1, 29);
                                Console.ForegroundColor = ConsoleColor.Red;
                                Console.Write("Fallaste!");
                                Console.ReadKey();
                                Console.SetCursorPosition(1, 29);                                
                                Console.Write("                                                     ");
                                tablero1[tiro_en_columna, tiro_en_fila] = 69;
                                turno = 0;
                            }
                        }

                    }
                }
                Console.SetCursorPosition(1, 29);
                if (aciertos_jugador1 == 20)
                {
                    Console.WriteLine("Ganaste " + jugador1 + " presione Enter para continuar");
                    Console.ReadKey();
                    Console.WriteLine("Si desea salir al menu principal y volver a jugar ingrese 1, por el contrario si desea salir ingrese 0");
                    salir = Convert.ToInt32(Console.ReadLine());
                }
                if (aciertos_jugador2 == 20)
                {
                    Console.WriteLine("Ganaste " + jugador2 + " presione Enter para continuar");
                    Console.ReadKey();
                    Console.WriteLine("Si desea salir al menu principal y volver a jugar ingrese 1, por el contrario si desea salir ingrese 0");
                    salir = Convert.ToInt32(Console.ReadLine());
                }
            }
            break;
        case 2:
            {
                Console.Clear();
                Console.SetCursorPosition(1,1);
                Console.WriteLine("Ingrese el nombre de jugador 1");
                Console.SetCursorPosition(1, 2);
                jugador1 = Convert.ToString(Console.ReadLine());
                Console.SetCursorPosition(1, 3);
                Console.WriteLine("================================");
                Console.SetCursorPosition(1, 4);
                Console.ForegroundColor = ConsoleColor.Green;
                Console.WriteLine("Presione ENTER para continuar");
                Console.ForegroundColor = ConsoleColor.White;
                Console.ReadLine();

                //Crear tabla
                for (int i = 0; i < 11; i++)
                {
                    for (int j = 0; j < 11; j++)
                    {
                        tablero1[i, j] = -1;

                    }
                }
                for (int i = 0; i < 11; i++)
                {
                    tablero1[i, 0] = i;
                    tablero1[0, i] = i;
                }

                //Crear barcos
                aleatorio = new Random();
                numero_acorazados = 0;

                //GENERACION DE BARCOS ACORAZADOS (BARCOS DE 4 POSICIONES}

                while (numero_acorazados < acorazado)
                {
                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 7)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas + 1, filas] == -1 &&
                                tablero1[columnas + 2, filas] == -1 &&
                                tablero1[columnas + 3, filas] == -1)
                            {
                                tablero1[columnas, filas] = 0;
                                tablero1[columnas + 1, filas] = 0;
                                tablero1[columnas + 2, filas] = 0;
                                tablero1[columnas + 3, filas] = 0;

                                numero_acorazados++;
                            }
                        }
                    }

                    //Barcos Verticales

                    if (posicion == 1)
                    {
                        if (filas < 7)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas, filas + 1] == -1 &&
                                tablero1[columnas, filas + 2] == -1 &&
                                tablero1[columnas, filas + 3] == -1)
                            {
                                tablero1[columnas, filas] = 0;
                                tablero1[columnas, filas + 1] = 0;
                                tablero1[columnas, filas + 2] = 0;
                                tablero1[columnas, filas + 3] = 0;

                                numero_acorazados++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS CRUCERO (BARCOS DE 3 POSICIONES)

                numero_crucero = 0;

                while (numero_crucero < crucero)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 8)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas + 1, filas] == -1 &&
                                tablero1[columnas + 2, filas] == -1)
                            {
                                tablero1[columnas, filas] = 2;
                                tablero1[columnas + 1, filas] = 2;
                                tablero1[columnas + 2, filas] = 2;

                                numero_crucero++;
                            }
                        }
                    }

                    //Barcos verticales

                    if (posicion == 1)
                    {
                        if (filas < 8)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas, filas + 1] == -1 &&
                                tablero1[columnas, filas + 2] == -1)

                            {
                                tablero1[columnas, filas] = 2;
                                tablero1[columnas, filas + 1] = 2;
                                tablero1[columnas, filas + 2] = 2;

                                numero_crucero++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS DESTRUCTOR (BARCOS DE 2 POSICIONES)

                numero_destructor = 0;

                while (numero_destructor < destructor)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 9)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas + 1, filas] == -1)
                            {
                                tablero1[columnas, filas] = 3;
                                tablero1[columnas + 1, filas] = 3;

                                numero_destructor++;
                            }
                        }
                    }

                    //Barcos verticales

                    if (posicion == 1)
                    {
                        if (filas < 9)
                        {
                            if (tablero1[columnas, filas] == -1 &&
                                tablero1[columnas, filas + 1] == -1)

                            {
                                tablero1[columnas, filas] = 3;
                                tablero1[columnas, filas + 1] = 3;

                                numero_destructor++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS SUBMARINOS (BARCOS DE 1 POSICION)

                numero_submarino = 0;

                while (numero_submarino < submarino)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);

                    //Barcos    

                    if (columnas < 10 && filas < 10)
                    {
                        if (tablero1[columnas, filas] == -1)
                        {
                            tablero1[columnas, filas] = 4;

                            numero_submarino++;
                        }
                    }
                }


                //IMPRIMIR TABLA
                //Imprimir decoracion tabla

                Console.Clear();
                Console.ForegroundColor = ConsoleColor.Green;
                for (int i = 2; i < 23; i++)
                {
                    Console.SetCursorPosition(5, i);
                    Console.WriteLine("|");
                }

                for (int c = 8; c < 37; c += 3)
                {
                    for (int i = 3; i < 23; i++)
                    {
                        Console.SetCursorPosition(c, i);
                        Console.WriteLine("|");
                    }
                }

                for (int i = 3; i < 36; i++)
                {
                    Console.SetCursorPosition(i, 3);
                    Console.WriteLine("-");
                }

                for (int f = 5; f < 24; f += 2)
                {
                    for (int i = 6; i < 35; i++)
                    {
                        Console.SetCursorPosition(i, f);
                        Console.WriteLine("-");
                    }
                }

                Console.SetCursorPosition(1, 0);
                Console.WriteLine(jugador1);


                //Imprimir tabla

                Console.ForegroundColor = ConsoleColor.White;

                for (int i = 0; i < 11; i++)
                {
                    for (int j = 0; j < 11; j++)
                    {
                        if (i == 0 || j == 0)
                        {
                            Console.SetCursorPosition(((i + 1) * 3), (j + 1) * 2);
                            Console.Write(tablero1[i, j]);
                        }
                    }

                }

                //-----------------------------------------------------------------------------------------------------------------------------
                //TABLERO 2
                //Imprimir decoracion tabla

                Console.ForegroundColor = ConsoleColor.DarkMagenta;
                for (int i = 2; i < 23; i++)
                {
                    Console.SetCursorPosition(45, i);
                    Console.WriteLine("|");
                }

                for (int c = 48; c < 78; c += 3)
                {
                    for (int i = 3; i < 23; i++)
                    {
                        Console.SetCursorPosition(c, i);
                        Console.WriteLine("|");
                    }
                }

                for (int i = 43; i < 76; i++)
                {
                    Console.SetCursorPosition(i, 3);
                    Console.WriteLine("-");
                }

                for (int f = 5; f < 24; f += 2)
                {
                    for (int i = 46; i < 75; i++)
                    {
                        Console.SetCursorPosition(i, f);
                        Console.WriteLine("-");
                    }
                }

                Console.SetCursorPosition(42, 0);
                Console.WriteLine("IA");


                //RELLENAR TABLA 2

                Console.ForegroundColor = ConsoleColor.White;
                for (int i = 0; i < 11; i++)
                {
                    for (int j = 0; j < 11; j++)
                    {
                        tablero2[i, j] = -1;

                    }
                }
                for (int i = 0; i < 11; i++)
                {
                    tablero2[i, 0] = i;
                    tablero2[0, i] = i;
                }

                //Crear barcos
                aleatorio = new Random();
                numero_acorazados = 0;

                //GENERACION DE BARCOS ACORAZADOS (BARCOS DE 4 POSICIONES}

                while (numero_acorazados < acorazado)
                {
                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 7)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas + 1, filas] == -1 &&
                                tablero2[columnas + 2, filas] == -1 &&
                                tablero2[columnas + 3, filas] == -1)
                            {
                                tablero2[columnas, filas] = 0;
                                tablero2[columnas + 1, filas] = 0;
                                tablero2[columnas + 2, filas] = 0;
                                tablero2[columnas + 3, filas] = 0;

                                numero_acorazados++;
                            }
                        }
                    }

                    //Barcos Verticales

                    if (posicion == 1)
                    {
                        if (filas < 7)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas, filas + 1] == -1 &&
                                tablero2[columnas, filas + 2] == -1 &&
                                tablero2[columnas, filas + 3] == -1)
                            {
                                tablero2[columnas, filas] = 0;
                                tablero2[columnas, filas + 1] = 0;
                                tablero2[columnas, filas + 2] = 0;
                                tablero2[columnas, filas + 3] = 0;

                                numero_acorazados++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS CRUCERO (BARCOS DE 3 POSICIONES)

                numero_crucero = 0;

                while (numero_crucero < crucero)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 8)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas + 1, filas] == -1 &&
                                tablero2[columnas + 2, filas] == -1)
                            {
                                tablero2[columnas, filas] = 2;
                                tablero2[columnas + 1, filas] = 2;
                                tablero2[columnas + 2, filas] = 2;

                                numero_crucero++;
                            }
                        }
                    }

                    //Barcos verticales

                    if (posicion == 1)
                    {
                        if (filas < 8)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas, filas + 1] == -1 &&
                                tablero2[columnas, filas + 2] == -1)

                            {
                                tablero2[columnas, filas] = 2;
                                tablero2[columnas, filas + 1] = 2;
                                tablero2[columnas, filas + 2] = 2;

                                numero_crucero++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS DESTRUCTOR (BARCOS DE 2 POSICIONES)

                numero_destructor = 0;

                while (numero_destructor < destructor)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);
                    posicion = aleatorio.Next(0, 2);

                    //Barcos horizontales

                    if (posicion == 0)
                    {
                        if (columnas < 9)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas + 1, filas] == -1)
                            {
                                tablero2[columnas, filas] = 3;
                                tablero2[columnas + 1, filas] = 3;

                                numero_destructor++;
                            }
                        }
                    }

                    //Barcos verticales

                    if (posicion == 1)
                    {
                        if (filas < 9)
                        {
                            if (tablero2[columnas, filas] == -1 &&
                                tablero2[columnas, filas + 1] == -1)

                            {
                                tablero2[columnas, filas] = 3;
                                tablero2[columnas, filas + 1] = 3;

                                numero_destructor++;
                            }
                        }
                    }
                }

                //GENERACION DE BARCOS SUBMARINOS (BARCOS DE 1 POSICION)

                numero_submarino = 0;

                while (numero_submarino < submarino)
                {
                    //Generar posicion aleatoria

                    columnas = aleatorio.Next(1, 11);
                    filas = aleatorio.Next(1, 11);

                    //Barcos    

                    if (columnas < 10 && filas < 10)
                    {
                        if (tablero2[columnas, filas] == -1)
                        {
                            tablero2[columnas, filas] = 4;

                            numero_submarino++;
                        }
                    }
                }

                //IMPRIMIR TABLERO 2

                Console.ForegroundColor = ConsoleColor.White;

                for (int i = 0; i < 11; i++)
                {
                    for (int j = 0; j < 11; j++)
                    {
                        if (i == 0 || j == 0)
                        {
                            Console.SetCursorPosition(((i + 1) * 3) + 40, (j + 1) * 2);
                            Console.Write(tablero2[i, j]);
                        }

                    }

                }

                //JUGABILIDAD

                aciertos_jugador1 = 0;
                aciertos_jugador2 = 0;
                Console.SetCursorPosition(1, 27);
                Console.WriteLine("Ingrese tiro en X:");
                Console.SetCursorPosition(1, 28);
                Console.WriteLine("Ingrese tiro en y:");
                turno = 0;
                while (aciertos_jugador1 < 20 && aciertos_jugador2 < 20)
                {
                    if (turno == 0)
                    {
                        Console.SetCursorPosition(0, 25);
                        Console.ForegroundColor = ConsoleColor.Green;
                        Console.Write(" Tirando " + jugador1);
                        Console.ForegroundColor = ConsoleColor.White;
                        Console.SetCursorPosition(19, 27);
                        Console.Write("                                        ");
                        Console.SetCursorPosition(19, 28);
                        Console.Write("                                        ");
                        Console.SetCursorPosition(19, 27);
                        tiro_en_columna = Convert.ToInt32(Console.ReadLine());
                        Console.SetCursorPosition(19, 28);
                        tiro_en_fila = Convert.ToInt32(Console.ReadLine());

                        while (tiro_en_columna < 1 || tiro_en_columna > 10 || tiro_en_fila < 1 || tiro_en_fila > 10)
                        {
                            Console.SetCursorPosition(0, 29);
                            Console.ForegroundColor = ConsoleColor.Red;
                            Console.Write(" No sea idiota, el tablero es de 10 x 10. Vuelve a tirar ");
                            Console.ForegroundColor = ConsoleColor.White;
                            Console.ReadKey();
                            Console.SetCursorPosition(19, 27);
                            Console.Write("                                        ");
                            Console.SetCursorPosition(19, 28);
                            Console.Write("                                        ");
                            Console.SetCursorPosition(0, 29);
                            Console.Write("                                                                                ");
                            Console.SetCursorPosition(19, 27);
                            tiro_en_columna = Convert.ToInt32(Console.ReadLine());
                            Console.SetCursorPosition(19, 28);
                            tiro_en_fila = Convert.ToInt32(Console.ReadLine());
                        }

                        if (tablero2[tiro_en_columna, tiro_en_fila] != -1 && tablero2[tiro_en_columna, tiro_en_fila] != 0 && tablero2[tiro_en_columna, tiro_en_fila] != 2 && tablero2[tiro_en_columna, tiro_en_fila] != 3 && tablero2[tiro_en_columna, tiro_en_fila] != 4)
                        {
                            Console.SetCursorPosition(0, 29);
                            Console.ForegroundColor = ConsoleColor.Red;
                            Console.Write(" Ya tiraste ahi idiota. Vuelve a tirar");
                            Console.ForegroundColor = ConsoleColor.White;
                            Console.ReadKey();
                            Console.SetCursorPosition(0, 29);
                            Console.Write("                                                   ");
                        }
                        else
                        {
                            if (tablero2[tiro_en_columna, tiro_en_fila] == 0 || tablero2[tiro_en_columna, tiro_en_fila] == 2 || tablero2[tiro_en_columna, tiro_en_fila] == 3 || tablero2[tiro_en_columna, tiro_en_fila] == 4)
                            {
                                Console.SetCursorPosition(((tiro_en_columna + 1) * 3) + 40, (tiro_en_fila + 1) * 2);
                                Console.ForegroundColor = ConsoleColor.Red;
                                Console.Write(" B");
                                Console.SetCursorPosition(1, 29);
                                Console.ForegroundColor = ConsoleColor.Green;
                                Console.Write("Le diste Vuele a tirar");
                                Console.ForegroundColor = ConsoleColor.White;
                                Console.ReadKey();
                                aciertos_jugador1++;
                                tablero2[tiro_en_columna, tiro_en_fila] = 69;
                            }
                            else
                            {
                                Console.ForegroundColor = ConsoleColor.Blue;
                                Console.SetCursorPosition(((tiro_en_columna + 1) * 3) + 40, (tiro_en_fila + 1) * 2);
                                Console.Write(" A");
                                Console.SetCursorPosition(1, 29);
                                Console.ForegroundColor = ConsoleColor.Red;
                                Console.Write("Fallaste!");
                                Console.ForegroundColor = ConsoleColor.White;
                                Console.ReadKey();
                                tablero2[tiro_en_columna, tiro_en_fila] = 69;
                                turno = 1;
                            }
                        }
                    }
                    else
                    {
                        Console.SetCursorPosition(0, 25);
                        Console.Write(" Tirando IA ");

                        tiro_en_columna = aleatorio.Next(1, 9);
                        tiro_en_fila = aleatorio.Next(1, 9);

                        while (tiro_en_fila < 1 || tiro_en_fila > 10 || tiro_en_columna < 1 || tiro_en_columna > 10)
                        {
                            tiro_en_fila = aleatorio.Next(1, 9);
                            tiro_en_columna = aleatorio.Next(1, 9);

                        }

                        if (tablero1[tiro_en_columna, tiro_en_fila] != -1 && tablero1[tiro_en_columna, tiro_en_fila] != 0 && tablero1[tiro_en_columna, tiro_en_fila] != 2 && tablero1[tiro_en_columna, tiro_en_fila] != 3 && tablero1[tiro_en_columna, tiro_en_fila] != 4)
                        {

                        }
                        else
                        {
                            if (tablero1[tiro_en_columna, tiro_en_fila] != -1 && tablero1[tiro_en_columna, tiro_en_fila] != 0 && tablero1[tiro_en_columna, tiro_en_fila] != 2 && tablero1[tiro_en_columna, tiro_en_fila] != 3 && tablero1[tiro_en_columna, tiro_en_fila] != 4)
                            {
                                Console.SetCursorPosition((tiro_en_columna + 1) * 3, (tiro_en_fila + 1) * 2);
                                Console.ForegroundColor = ConsoleColor.Red;
                                Console.Write(" B");
                                aciertos_jugador2++;
                                tablero1[tiro_en_columna, tiro_en_fila] = 69;
                            }
                            else
                            {
                                Console.SetCursorPosition(((tiro_en_columna + 1) * 3), (tiro_en_fila + 1) * 2);
                                Console.ForegroundColor = ConsoleColor.Blue;
                                Console.Write(" A");
                                tablero1[tiro_en_columna, tiro_en_fila] = 69;
                                turno = 0;
                            }
                        }

                    }
                }
                Console.SetCursorPosition(1, 29);
                if (aciertos_jugador1 == 20)
                {
                    Console.WriteLine("Ganaste " + jugador1 + "presione ENTER para continuar");
                    Console.ReadKey();
                    Console.WriteLine("Si desea salir al menu principal y volver a jugar ingrese 1, por el contrario si desea salir ingrese 0");
                    salir = Convert.ToInt32(Console.ReadLine());
                }
                else
                {
                    Console.WriteLine("Perdiste " + jugador1 + "presione ENTER para continuar");
                    Console.ReadKey();
                    Console.WriteLine("Si desea salir al menu principal y volver a jugar ingrese 1, por el contrario si desea salir ingrese 0");
                    salir = Convert.ToInt32(Console.ReadLine());
                }                
            }
            break;
        case 3:
            {
                Console.Clear();
                Console.WriteLine("Hasta luego vaquero...");
                salir = 0;
            }
            break;
    }
} while (salir != 0);













